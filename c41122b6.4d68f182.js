(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return u}));var i=n(2),a=n(6),r=(n(0),n(76)),c={title:"Understanding authentication"},o={unversionedId:"guide-authentication",id:"guide-authentication",isDocsHomePage:!1,title:"Understanding authentication",description:"Authentication in IDX and Ceramic is based on Decentralized Identifiers (DIDs).",source:"@site/docs/guide-authentication.md",slug:"/guide-authentication",permalink:"/docs/guide-authentication",editUrl:"https://github.com/ceramicstudio/js-idx/edit/master/website/docs/guide-authentication.md",version:"current",sidebar:"docs",previous:{title:"IDX library APIs",permalink:"/docs/libs-idx"},next:{title:"Setting up Definitions",permalink:"/docs/guide-definitions"}},d=[{value:"Reading from a known Identity Index",id:"reading-from-a-known-identity-index",children:[]},{value:"Writing and reading when authenticated",id:"writing-and-reading-when-authenticated",children:[]}],s={rightToc:d};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Authentication in ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/idx-terminology#identity-index--idx"}),"IDX")," and ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/idx-terminology#ceramic"}),"Ceramic")," is based on ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/idx-terminology#did"}),"Decentralized Identifiers (DIDs)"),"."),Object(r.b)("h2",{id:"reading-from-a-known-identity-index"},"Reading from a known Identity Index"),Object(r.b)("p",null,"It is possible to interact with IDX in a ",Object(r.b)("strong",{parentName:"p"},"read-only")," manner by providing a known DID to read from, such as:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"import { IDX } from '@ceramicstudio/idx'\n\n// See constructor options\nconst idx = new IDX(...)\n\nawait idx.get('<Definition DocID>', '<Known DID>')\n")),Object(r.b)("p",null,"However, this only works if the content is ",Object(r.b)("strong",{parentName:"p"},"public"),". If the content has been encrypted for a ",Object(r.b)("strong",{parentName:"p"},"specific recipient"),", the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-types#ceramicapi"}),"Ceramic instance")," used by the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-idx#idx-class"}),Object(r.b)("inlineCode",{parentName:"a"},"IDX")," instance")," ",Object(r.b)("strong",{parentName:"p"},"needs to be authenticated"),"."),Object(r.b)("p",null,"It is possible to check if the Ceramic instance is authenticated and request authentication directly on the ",Object(r.b)("inlineCode",{parentName:"p"},"IDX")," instance:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"if (!idx.authenticated) {\n  await idx.authenticate()\n}\n")),Object(r.b)("h2",{id:"writing-and-reading-when-authenticated"},"Writing and reading when authenticated"),Object(r.b)("p",null,"Once successufully authenticated, it is possible to write to the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/idx-terminology#identity-index--idx"}),"Identity Index")," associated to the DID, for example using the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-idx#set"}),Object(r.b)("inlineCode",{parentName:"a"},"set")," method"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"await idx.set('<Definition DocID>', { hello: 'world' })\n")),Object(r.b)("p",null,"It is also possible to omit providing the DID in the reading methods:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"const content = await idx.get('<Definition DocID>')\n")),Object(r.b)("p",null,"In this case, IDX will use the authenticated DID as fallback."))}u.isMDXComponent=!0},76:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),b=u(n),p=i,m=b["".concat(c,".").concat(p)]||b[p]||l[p]||r;return n?a.a.createElement(m,o(o({ref:t},s),{},{components:n})):a.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,c=new Array(r);c[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,c[1]=o;for(var s=2;s<r;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);